{"version":3,"sources":["utils/style.js","components/world-map/BoxInfo.js","components/world-map/MapItem.js","components/world-map/Map.js","utils/utils.js","components/world-map/UserLocator.js","components/country-specific/SelectMenu/SelectMenu.js","components/country-specific/3-boxes/BoxComponent.js","components/country-specific/Header.js","components/country-specific/chart/ChartComponent.js","components/country-specific/consts.js","components/country-specific/SpecificApp.js","App.js","serviceWorker.js","index.js"],"names":["title","makeStyles","root","width","backgroundColor","heading","fontSize","color","padding","margin","mystyle","mapItem","textAlign","height","display","zIndex","box","direction","position","bottom","right","left","minHeight","img","BoxInfo","props","classes","style","alt","item","country","src","countryInfo","flag","className","cases","todayCases","deaths","todayDeaths","recovered","Date","updated","toLocaleString","dateStyle","timeStyle","month","critical","MapItem","useState","isShown","setIsShown","onMouseEnter","onMouseLeave","Card","Map","getMapOptions","maps","streetViewControl","scaleControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","gestureHandling","disableDoubleClickZoom","minZoom","maxZoom","mapTypeControl","mapTypeId","MapTypeId","SATELLITE","mapTypeControlOptions","MapTypeControlStyle","HORIZONTAL_BAR","ControlPosition","BOTTOM_CENTER","mapTypeIds","ROADMAP","HYBRID","zoomControl","clickableIcons","state","center","tooggle","this","setState","lat","lng","bootstrapURLKeys","key","api_key","v","defaultZoom","zoom","options","con","map","long","React","Component","defaultProps","numberWithCommas","x","toString","replace","DataFetcher","BASE_URL","API_KEY","getHistorySpeceficCountrty","days","fetch","then","res","json","getAllLocations","catch","err","console","log","UserLocator","Container","maxWidth","Button","onClick","window","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","obj","passDate","data","variant","SelectMenu","Grid","xs","Autocomplete","loading","id","countries","getOptionLabel","iso3","onChange","e","handleChange","renderOption","option","Fragment","autoComplete","disableClearable","renderInput","params","TextField","label","placeholder","BoxComponent","container","spacing","Paper","borderBottom","selectedCountry","Header","justify","alignItems","selected","myChart","DrawChart","ctx","createRef","useEffect","datasets","labels","Chart","current","arr","Array","cdata","recoverd","chart_data","type","borderColor","borderWidth","legend","scales","yAxes","ticks","fontColor","fontStyle","beginAtZero","maxTicksLimit","gridLines","drawTicks","xAxes","zeroLineColor","reciveChartData","ref","ChartComponent","setHistory","oneLable","setLables","chartData","setChartData","chartDeaths","upadteDeaths","setRecoverd","a","Object","keys","length","values","timeline","fetch_data","SpecificApp","updateSelected","handleCountry","App","updateCountries","userLoc","updateUserLoc","panel","childData","Boolean","location","hostname","match","routing","exact","path","component","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e16bb65c.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\nexport const title = makeStyles({\n    root: {\n      width: 'fit-content',\n      backgroundColor: 'white'\n    },\n    heading: {\n      fontSize: '1.3rem',\n      color: 'white',\n      padding: '0',\n      margin: '0.1rem'\n    }\n  });\n  \nexport const mystyle = {\n  \n    mapItem: {\n      color: \"white\",\n      backgroundColor: \"DodgerBlue\",\n      padding: \"10px\",\n      textAlign: 'center',\n      width: 'fit-content',\n      height: 'auto',\n      display: 'block',\n      zIndex: '-1'\n    },\n  \n    box: {\n      textAlign: 'right',\n      direction: 'rtl',\n      fontSize: '15px',\n      width: '150px',\n      height: 'auto',\n      position: 'absolute',\n      bottom: '.7rem',\n      right: '0',\n      left: '-30px',\n      minHeight: '100px',\n      backgroundColor: 'DodgerBlue',\n      zIndex: '99999999'\n    },\n  \n    img: {\n      width: '100%',\n      height: 'auto',\n      padding: '0',\n      margin: '0'\n    },\n  \n    title: {\n      width: '100%',\n      display: 'block',\n      backgroundColor: 'white',\n      color: 'black',\n      textAlign: 'center',\n      padding: '5px 0',\n      margin: '0'\n    }\n  \n  };","import React from 'react';\nimport { mystyle, title } from '../../utils/style';\n\n\nconst BoxInfo = function(props) {\n    const classes = title();\n    return (\n      <div style={mystyle.box}>\n        <img alt={props.item.country} src={props.item.countryInfo.flag} style={mystyle.img} />\n        <span style={mystyle.title}>{props.item.country}</span>\n        <div style={{padding: '1rem 1.3rem', color: '#EBEBEB'}}>\n          <p className={classes.heading}>נדבקים</p> {props.item.cases} ({props.item.todayCases}+)\n          <p className={classes.heading}>מקרי מוות</p> {props.item.deaths} ({props.item.todayDeaths}+)\n          <p className={classes.heading}>החלימו</p> {props.item.recovered}\n          <p className={classes.heading}>עודכן</p> {''+new Date(props.item.updated).toLocaleString(\"he-IL\", {\n            dateStyle: 'medium',\n            timeStyle: 'short',\n            month: '2-digis'\n          })}\n          <p className={classes.heading}>במצב קשה:</p> {props.item.critical}\n        </div>\n      </div>\n    )\n}\n\nexport default BoxInfo;","import React, { useState } from 'react';\nimport { Card } from '@material-ui/core';\nimport { mystyle, title } from '../../utils/style';\nimport BoxInfo from './BoxInfo';\n\nconst MapItem = function(props) {\n\n    const classes = title();\n    const [isShown, setIsShown] = useState(false);\n\n    return (\n    <div>\n        <div onMouseEnter={() => setIsShown(true)} onMouseLeave={() => setIsShown(false)}>\n            <Card className={classes.root}>\n                <div style={mystyle.mapItem}> {props.item.country} </div>\n            </Card>\n        {(isShown) ? <BoxInfo item={props.item} /> : ''}\n        </div>\n    </div>\n    )\n}\n\nexport default MapItem;","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport MapItem from './MapItem';\n\nclass Map extends React.Component {\n\n  getMapOptions = (maps) => {\n\n    return {\n        streetViewControl: false,\n        scaleControl: true,\n        fullscreenControl: false,\n        styles: [{\n            featureType: \"poi.business\",\n            elementType: \"labels\",\n            stylers: [{\n                visibility: \"on\"\n            }]\n        }],\n        gestureHandling: \"greedy\",\n        disableDoubleClickZoom: true,\n        minZoom: 5,\n        maxZoom: 15,\n\n        mapTypeControl: true,\n        mapTypeId: maps.MapTypeId.SATELLITE,\n        mapTypeControlOptions: {\n            style: maps.MapTypeControlStyle.HORIZONTAL_BAR,\n            position: maps.ControlPosition.BOTTOM_CENTER,\n            mapTypeIds: [\n                maps.MapTypeId.ROADMAP,\n                maps.MapTypeId.SATELLITE,\n                maps.MapTypeId.HYBRID\n            ]\n        },\n\n        zoomControl: true,\n        clickableIcons: true\n    };\n}\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            center: {},\n            tooggle: false\n        }\n    }\n    \n    static defaultProps = {\n      zoom: 4\n    };\n\n\n    componentWillMount() {\n      this.setState({\n        center: {lat: this.props.center.lat, lng: this.props.center.lng}\n      });\n    }\n\n    render() {\n      return (\n        <div style={{ height: '100vh', width: '100wh' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: this.props.api_key, v: '3.30'}}\n            center={this.state.center}\n            defaultZoom={this.props.zoom}\n            options={this.getMapOptions}\n          >\n\n          {this.props.con.map(item => {\n            return (\n              <MapItem\n                key={item.country}\n                item={item}\n                lat={item.countryInfo.lat}\n                lng={item.countryInfo.long}\n                con={this.props.con}\n              />   \n            )\n          })}\n\n\n          </GoogleMapReact>\n        </div>\n      );\n    }\n  }\n   \n  export default Map;","\nconst DataFetcher = {\n    \n    BASE_URL: 'https://corona.lmao.ninja/v2',\n    API_KEY: 'AIzaSyBkwt4aE8tH57Tk8RIx3V6Qb9qbKWdOL1E',\n\n    async getHistorySpeceficCountrty(state, days) {\n        const res = await fetch(`${this.BASE_URL}/historical/${state}?lastdays=${days}`)\n        .then(res => res.json());\n        return res;\n    },\n\n    async getAllLocations() {\n        const res = await fetch(`${this.BASE_URL}/countries?yesterday=false`)\n        .then(res=>res.json()).catch(err => console.log(err));\n        return res;\n    },    \n\n}\n\nexport const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default DataFetcher;","import React from 'react';\nimport { Button, Container } from '@material-ui/core';\n\nfunction UserLocator(props) {\n\n    const updateAppLocation = () => {\n        window.navigator.geolocation.getCurrentPosition(function(position) {\n            let [lat, long] = [position.coords.latitude, position.coords.longitude];\n            const obj = {lat: lat, lng: long};\n            return props.passDate({data: obj});\n          });\n    };\n\n    return (\n        <Container maxWidth='lg'>\n            <Button onClick={updateAppLocation} variant=\"contained\" color=\"primary\">Get my location</Button>\n        </Container>\n    )\n\n}\n\nexport const handleClick = () => {\n    debugger;\n    console.log('fdsfdsafdasfadsgd');\n}\n\nexport default UserLocator;","import React from 'react';\nimport './selectmenu.css';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst countryToFlag = (flag, country) => {\n\n    return (\n        <img src={flag} alt={country} width={24} />\n    )\n\n}\n\nfunction SelectMenu(props) {\n\n    const handleChanges = (country) => {\n        props.handleChange(country)\n    }\n\n    return (\n\n            <Grid item xs={12}>\n                <div className=\"container\">\n                    <Autocomplete\n                        loading={true}\n                        id=\"combo-box-demo\"\n                        options={props.countries}\n                        getOptionLabel={(country) => country.country + `(${country.countryInfo.iso3})`}\n                        style={{ width: '80%', margin: '0 auto'}}\n                        onChange={(e, v) => handleChanges(v)}\n                        renderOption={(option) => (\n                            <React.Fragment>\n                            <span>{countryToFlag(option.countryInfo.flag, option.country)}</span>\n                            {option.country} ({option.countryInfo.iso3})\n                            </React.Fragment>\n                        )}\n                        autoComplete={true}\n                        disableClearable={true}\n                        renderInput={(params) => <TextField {...params} label=\"State\" placeholder=\"Select one\"\n                        style={{ direction: 'ltr', textAlign: 'left' }} variant=\"outlined\"\n                        />}\n                    />\n                </div>\n            </Grid>\n\n    )\n\n}\n\nexport default SelectMenu;","import React from 'react';\nimport { Grid, Paper } from '@material-ui/core';\nimport './box.css';\nimport { numberWithCommas } from '../../../utils/utils';\n\n\nfunction BoxComponent(props) {\n\n    return (\n        <div className='grid-container'>\n            <Grid container spacing={3}>\n                <Grid item xs>\n                    <Paper className='paper'\n                    style={{borderBottom: '2px solid red'}}>\n                        <span className='heading'> הרוגים </span>\n                        <span className='number'> {numberWithCommas(props.selectedCountry.deaths || '-')} </span>\n                        {(props.selectedCountry.todayDeaths) ? `${props.selectedCountry.todayDeaths} היום` : ''}\n                    </Paper>\n                </Grid>\n                <Grid item xs>\n                    <Paper className='paper'\n                    style={{borderBottom: '2px solid orange'}}>\n                        <span className='heading'> חולים </span>\n                        <span className='number'>  {numberWithCommas(props.selectedCountry.cases || '-')} </span>\n                        {(props.selectedCountry.todayCases) ? `${props.selectedCountry.todayCases} היום` : ''}\n                    </Paper>\n                </Grid>\n                <Grid item xs>\n                    <Paper className='paper'>\n                        <span className='heading'> מחלימים </span>\n                        <span className='number'> {numberWithCommas(props.selectedCountry.recovered || '-')} </span>\n                    </Paper>\n                </Grid>\n        </Grid>\n      </div>\n    )\n\n}\n\nexport default BoxComponent;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport './header.css';\n\nfunction Header(props) {\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className='header'\n        >\n        <div style={{direction: 'ltr', textAlign: 'center'}}>\n            <p> מציג נתוני covid-19 עבור {props.selected.country || '_'} </p>\n        </div>\n        </Grid>\n    )\n\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js';\nimport DataFetcher from '../../../utils/utils';\nimport { reciveChartData } from '../consts';\n\nvar myChart = null;\n\nfunction DrawChart(props) {\n\n    const ctx = React.createRef();\n\n    useEffect(() => {\n        \n        if(myChart!=null){\n            myChart.data.datasets = null;\n            myChart.data.labels = null;\n        }\n\n        myChart = new Chart(ctx.current, reciveChartData(props));\n    }, [props.deaths, props.cdata]);\n\n    return (\n        <div style={{margin: '0 auto', width: '80%', height: 'auto'}}>\n            <canvas\n                id=\"myChart\"\n                ref={ctx}\n            />\n        </div>\n    )\n\n}\n\n\nfunction ChartComponent(props) {\n\n    const [history, setHistory] = useState([]);\n    const [oneLable, setLables] = useState([]);\n    const [chartData, setChartData] = useState([]);\n    const [chartDeaths, upadteDeaths] = useState([]);\n    const [recoverd, setRecoverd] = useState([])\n\n    useEffect(() => {\n\n        async function fetch_data() {\n\n            const con = (Object.keys(props.selected).length > 0) ? \n            props.selected.country : 'israel';\n            const res = await DataFetcher.getHistorySpeceficCountrty(con, '7')\n            .then(data => {\n                upadteDeaths(Object.values(data.timeline.deaths));\n                setLables(Object.keys(data.timeline.cases));\n                setRecoverd(Object.values(data.timeline.recovered));\n                setChartData(Object.values(data.timeline.cases));\n                setHistory(data);\n            })\n            .catch(err => console.log(err))\n            return;\n        }\n\n        fetch_data();\n        \n    }, [props.selected, upadteDeaths]);\n    \n    if(Object.keys(props.selected).length > 0) {\n        return (\n            <DrawChart country={oneLable} recoverd={recoverd} cdata={chartData} deaths={chartDeaths} />\n        )\n    } else {\n        return ( <h1 style={{textAlign: 'center'}}>אנא בחר מדינה</h1> )\n    }\n\n    \n}\n\nexport default ChartComponent;","\n\nexport const reciveChartData = (arr=new Array()) => {\n\n    let data = {\n        labels: [...arr.country],\n        datasets: [{\n            label: 'חולים',\n            data: [...arr.cdata],\n            backgroundColor: 'rgb(5, 159, 255)',\n        },{\n            label: 'החלימו',\n            data: [...arr.recoverd],\n            backgroundColor: 'rgb(62, 194, 45)'          \n        }, {\n            label: 'נפטרו',\n            data: [...arr.deaths],\n            backgroundColor: 'rgb(240, 80, 80)'\n        }],\n    }\n\n    let chart_data = {\n        type: \"bar\",\n        data: data,\n        backgroundColor: 'rgba(0, 0, 0, 1)',\n        borderColor: \"rgba(0, 123, 255, 0.9)\",\n        borderWidth: 2,\n        options: {\n            legend: {\n                display: true,\n                position: \"bottom\"\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        fontColor: \"rgba(0,0,0,0.5)\",\n                        fontStyle: \"bold\",\n                        beginAtZero: true,\n                        maxTicksLimit: 10,\n                        padding: 20\n                    },\n                    gridLines: {\n                        drawTicks: false,\n                        display: false\n                    }\n    }],\n                xAxes: [{\n                    gridLines: {\n                        zeroLineColor: \"rgba(0, 0, 0, 1)\"\n    },\n                    ticks: {\n                        padding: 20,\n                        fontColor: \"rgba(0,0,0,0.5)\",\n                        fontStyle: \"bold\"\n                    }\n                }]\n            }\n        }\n    };\n\n    return chart_data;\n\n}","import React, { useState } from 'react';\nimport SelectMenu from './SelectMenu/SelectMenu';\nimport BoxComponent from './3-boxes/BoxComponent';\nimport Header from './Header';\nimport ChartComponent from './chart/ChartComponent';\n\nfunction SpecificApp(props) {\n\n    const [selectedCountry, updateSelected] = useState([]);\n\n    const handleCountry = (country) => {\n        updateSelected(country)\n    }\n\n    return (\n        <div>\n            <Header selected={selectedCountry} />\n            <SelectMenu countries={props.countries} selectedCountry={selectedCountry} handleChange={handleCountry} />\n            <BoxComponent selectedCountry={selectedCountry} handleChange={handleCountry} />\n            <ChartComponent selected={selectedCountry}/>\n        </div>\n    )\n\n}\n\nexport default SpecificApp;","import React, { useState, useEffect } from 'react';\nimport Map from './components/world-map/Map';\nimport DataFetcher from './utils/utils';\nimport UserLocator from './components/world-map/UserLocator';\nimport SpecificApp from './components/country-specific/SpecificApp';\n\nfunction App(props) {\n\n  const [countries, updateCountries] = useState([]);\n  const [userLoc, updateUserLoc] = useState([]);\n  \n  function childUpdate(childData) {\n    updateUserLoc(childData);\n  }\n\n  useEffect(function () {\n    if(countries !== []) {\n      DataFetcher.getAllLocations().then(data => {\n        updateCountries(data);\n      })\n    }\n  }, []);\n    if(props.panel !== true) {\n      return (\n        <div id=\"main\">\n          {(Object.keys(userLoc.data || {}).length > 0) ? \n          <Map api_key={DataFetcher.API_KEY} con={countries} center={userLoc.data}  /> :\n          <UserLocator passDate={childUpdate} />}\n        </div>\n      )\n    } else {\n    return <SpecificApp countries={countries} />\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n  <Router>\n    <div className=\"bg-color\">\n      <Route exact path={process.env.PUBLIC_URL + '/'} component={App} />\n      <Route path={process.env.PUBLIC_URL + '/stats'} component={() => <App panel={true} />} />\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}